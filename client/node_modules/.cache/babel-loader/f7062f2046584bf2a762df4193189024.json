{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\augte\\\\Documents\\\\google-books-search-react\\\\client\\\\src\\\\pages\\\\Search\\\\index.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport AddBookBtn from \"../../components/AddBookBtn\";\nimport { Row, Col } from \"../../components/Grid\";\nimport { BookList, BookListItem } from \"../../components/BookList\";\nimport EmptyList from \"../../components/EmptyList\";\n\nclass Search extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchResult: [],\n      query: \"\",\n      books: []\n    };\n\n    this.displayResult = data => {\n      this.setState({\n        books: data.items\n      });\n    };\n\n    this.searchGoogleBooks = () => {\n      let googleBooksUrl = \"https://www.googleapis.com/books/v1/volumes?q=\".concat(this.state.query);\n      axios.get(googleBooksUrl).then(res => {\n        //console.log(res);\n        this.displayResult(res.data);\n      }).catch(err => console.log(err));\n    };\n\n    this.handleInput = event => {\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      }); //console.log(\"Query\", this.state.query);\n    };\n  }\n\n  render() {\n    return React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(Col, {\n      size: \"md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"bookQ\",\n      className: \"form-control form-control-lg\",\n      autoComplete: \"off\",\n      type: \"text\",\n      name: \"query\",\n      onChange: this.handleInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      onClick: this.searchGoogleBooks,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Search for Books\"), this.state.books && this.state.books.length > 0 ? React.createElement(BookList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, this.state.books.map(book => {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(BookListItem, {\n        key: book.id,\n        authors: book.volumeInfo.authors ? book.volumeInfo.authors : [\"No Author Available\"],\n        title: book.volumeInfo.title,\n        synopsis: book.volumeInfo.description ? book.volumeInfo.description : \"No Description Available\",\n        link: book.volumeInfo.infoLink,\n        thumbnail: book.volumeInfo.imageLinks.thumbnail ? book.volumeInfo.imageLinks.thumbnail : \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(AddBookBtn, {\n        authors: book.volumeInfo.authors ? book.volumeInfo.authors : [\"No Author Available\"],\n        title: book.volumeInfo.title,\n        synopsis: book.volumeInfo.description ? book.volumeInfo.description : \"No Description Available\",\n        link: book.volumeInfo.infoLink,\n        thumbnail: book.volumeInfo.imageLinks.thumbnail ? book.volumeInfo.imageLinks.thumbnail : \"#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }));\n    })) : React.createElement(EmptyList, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Search;","map":{"version":3,"sources":["C:/Users/augte/Documents/google-books-search-react/client/src/pages/Search/index.js"],"names":["React","Component","axios","AddBookBtn","Row","Col","BookList","BookListItem","EmptyList","Search","state","searchResult","query","books","displayResult","data","setState","items","searchGoogleBooks","googleBooksUrl","get","then","res","catch","err","console","log","handleInput","event","target","name","value","render","length","map","book","id","volumeInfo","authors","title","description","infoLink","imageLinks","thumbnail"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport AddBookBtn from \"../../components/AddBookBtn\";\r\nimport { Row, Col } from \"../../components/Grid\";\r\nimport { BookList, BookListItem } from \"../../components/BookList\";\r\nimport EmptyList from \"../../components/EmptyList\";\r\n\r\n\r\nclass Search extends Component {\r\n    state = {\r\n        searchResult: [],\r\n        query: \"\",\r\n        books: []\r\n    };\r\n\r\n    displayResult = data => {\r\n        this.setState({books: data.items});\r\n    };\r\n\r\n    searchGoogleBooks = () => {\r\n        let googleBooksUrl = `https://www.googleapis.com/books/v1/volumes?q=${\r\n            this.state.query\r\n        }`;\r\n        axios\r\n          .get(googleBooksUrl)\r\n          .then(res => {\r\n            //console.log(res);\r\n            this.displayResult(res.data);\r\n          })\r\n          .catch(err => console.log(err));\r\n    };\r\n\r\n    handleInput = event => {\r\n        const { name, value } = event.target;\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n        //console.log(\"Query\", this.state.query);\r\n    };\r\n\r\n    \r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col size=\"md-12\">\r\n                    <div>\r\n                        <input id=\"bookQ\" className=\"form-control form-control-lg\" autoComplete=\"off\" type=\"text\" name=\"query\" onChange={this.handleInput} />\r\n                        <button type=\"submit\" onClick={this.searchGoogleBooks} >\r\n                            Search for Books\r\n                        </button>\r\n\r\n\r\n                        {(this.state.books && this.state.books.length > 0) ? \r\n                        <BookList>\r\n                            {this.state.books.map(book => {\r\n                                return (\r\n                                    <div>\r\n                                        <BookListItem\r\n                                        key={book.id}\r\n                                        authors={book.volumeInfo.authors ? book.volumeInfo.authors : [\"No Author Available\"]}\r\n                                        title={book.volumeInfo.title}\r\n                                        synopsis={book.volumeInfo.description ? \r\n                                            book.volumeInfo.description : \"No Description Available\"}\r\n                                        link={book.volumeInfo.infoLink}\r\n                                        thumbnail={book.volumeInfo.imageLinks.thumbnail ? \r\n                                            book.volumeInfo.imageLinks.thumbnail : \"#\"}\r\n                                        />\r\n\r\n                                        <AddBookBtn\r\n                                        authors={book.volumeInfo.authors ? book.volumeInfo.authors : [\"No Author Available\"]}\r\n                                        title={book.volumeInfo.title}\r\n                                        synopsis={book.volumeInfo.description ? \r\n                                            book.volumeInfo.description : \"No Description Available\"}\r\n                                        link={book.volumeInfo.infoLink}\r\n                                        thumbnail={book.volumeInfo.imageLinks.thumbnail ?\r\n                                            book.volumeInfo.imageLinks.thumbnail : \"#\"}\r\n                                            \r\n                                        />\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </BookList> \r\n                        :\r\n                        <EmptyList/>\r\n                        }\r\n\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Search;"]},"metadata":{},"sourceType":"module"}